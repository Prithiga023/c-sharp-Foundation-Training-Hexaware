namespace SISBankingModule
{
    internal class Program
    {
        static void Main(string[] args)
        {
            while (true)
            {
                Console.WriteLine("\n=== Welcome to SIS Banking Menu ===");
                Console.WriteLine("1. Loan Eligibility Check");
                Console.WriteLine("2. ATM Transaction");
                Console.WriteLine("3. Compound Interest");
                Console.WriteLine("4. Account Balance Checker");
                Console.WriteLine("5. Password Validator");
                Console.WriteLine("6. Transaction History");
                Console.WriteLine("7. Exit");

                Console.Write("Enter your choice: ");
                string input = Console.ReadLine();

                if (!int.TryParse(input, out int option))
                {
                    Console.WriteLine("Please enter a valid number.");
                    continue;
                }

                if (option == 1)
                    LoanEligibility();
                else if (option == 2)
                    ATM();
                else if (option == 3)
                    CompoundInterest();
                else if (option == 4)
                    CheckBalance();
                else if (option == 5)
                    PasswordCheck();
                else if (option == 6)
                    TransactionLog();
                else if (option == 7)
                {
                    Console.WriteLine("Thank you. Exiting the system.");
                    break;
                }
                else
                {
                    Console.WriteLine("Invalid option. Try again.");
                }
            }
        }

        static void LoanEligibility()
        {
            Console.WriteLine("\n--- Loan Eligibility Check ---");

            Console.Write("Enter Credit Score: ");
            int credit = Convert.ToInt32(Console.ReadLine());

            Console.Write("Enter Annual Income: ");
            double income = Convert.ToDouble(Console.ReadLine());

            if (credit > 700 && income >= 50000)
                Console.WriteLine("You are eligible for a loan.");
            else
                Console.WriteLine("You are not eligible for a loan.");
        }

        static void ATM()
        {
            Console.WriteLine("\n--- ATM Transaction ---");

            Console.Write("Enter your balance: ");
            double balance = Convert.ToDouble(Console.ReadLine());

            Console.Write("Choose action (Check / Withdraw / Deposit): ");
            string action = Console.ReadLine().ToLower();

            if (action == "withdraw")
            {
                Console.Write("Enter amount to withdraw: ");
                double amount = Convert.ToDouble(Console.ReadLine());

                if ((amount % 100 == 0 || amount % 500 == 0) && amount <= balance)
                {
                    balance -= amount;
                    Console.WriteLine("Withdrawal successful. New balance: " + balance);
                }
                else
                {
                    Console.WriteLine("Invalid withdrawal amount.");
                }
            }
            else if (action == "deposit")
            {
                Console.Write("Enter amount to deposit: ");
                double amount = Convert.ToDouble(Console.ReadLine());

                balance += amount;
                Console.WriteLine("Deposit successful. New balance: " + balance);
            }
            else if (action == "check")
            {
                Console.WriteLine("Your current balance is: " + balance);
            }
            else
            {
                Console.WriteLine("Invalid option.");
            }
        }

        static void CompoundInterest()
        {
            Console.WriteLine("\n--- Compound Interest ---");

            Console.Write("Enter initial amount: ");
            double principal = Convert.ToDouble(Console.ReadLine());

            Console.Write("Enter interest rate: ");
            double rate = Convert.ToDouble(Console.ReadLine());

            Console.Write("Enter number of years: ");
            int years = Convert.ToInt32(Console.ReadLine());

            double result = principal * Math.Pow(1 + rate / 100, years);
            Console.WriteLine("Future value: " + result.ToString("F2"));
        }

        static void CheckBalance()
        {
            Console.WriteLine("\n--- Account Balance Checker ---");

            Dictionary<string, double> accounts = new Dictionary<string, double>()
            {
                { "INDB1001", 10000.00 },
                { "INDB2002", 15000.50 },
                { "INDB3003", 8200.75 }
            };

            while (true)
            {
                Console.Write("Enter your account number: ");
                string acc = Console.ReadLine();

                if (acc.StartsWith("INDB") && acc.Length == 8 && int.TryParse(acc.Substring(4), out _))
                {
                    if (accounts.ContainsKey(acc))
                    {
                        Console.WriteLine("Your balance is: " + accounts[acc]);
                        break;
                    }
                    else
                    {
                        Console.WriteLine("Account not found.");
                    }
                }
                else
                {
                    Console.WriteLine("Invalid format. Use INDB followed by 4 digits.");
                }
            }
        }

        static void PasswordCheck()
        {
            Console.WriteLine("\n--- Password Validation ---");

            Console.Write("Enter a password: ");
            string password = Console.ReadLine();

            bool validLength = password.Length >= 8;
            bool hasUpper = password.Any(char.IsUpper);
            bool hasDigit = password.Any(char.IsDigit);

            if (validLength && hasUpper && hasDigit)
                Console.WriteLine("Password is valid.");
            else
                Console.WriteLine("Password is invalid. Must be 8+ characters, have 1 uppercase, and 1 digit.");
        }

        static void TransactionLog()
        {
            Console.WriteLine("\n--- Transaction Log ---");

            List<string> transactions = new List<string>();
            double balance = 1000.00;

            while (true)
            {
                Console.Write("Enter transaction (Deposit / Withdraw) or type 'exit': ");
                string type = Console.ReadLine().ToLower();

                if (type == "exit")
                    break;

                Console.Write("Enter amount: ");
                double amount = Convert.ToDouble(Console.ReadLine());

                if (type == "deposit")
                {
                    balance += amount;
                    transactions.Add("Deposited: " + amount);
                }
                else if (type == "withdraw")
                {
                    if (amount <= balance)
                    {
                        balance -= amount;
                        transactions.Add("Withdrew: " + amount);
                    }
                    else
                    {
                        Console.WriteLine("Not enough balance.");
                    }
                }
                else
                {
                    Console.WriteLine("Invalid transaction type.");
                }
            }

            Console.WriteLine("\nYour Transactions:");
            foreach (var t in transactions)
            {
                Console.WriteLine(t);
            }

            Console.WriteLine("Final balance: " + balance);
        }
    }
}
